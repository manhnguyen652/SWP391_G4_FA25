package Controllers;

import DAO.AccountDAO;
import jakarta.servlet.*;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;
import java.io.IOException;
import model.Account;
import utils.EmailUtility;

@WebServlet("/forgot-password")
public class ForgotPasswordController extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Khi ng∆∞·ªùi d√πng nh·∫•n "Qu√™n m·∫≠t kh·∫©u?" ‚Üí chuy·ªÉn ƒë·∫øn trang nh·∫≠p email
        request.getRequestDispatcher("/customer/forgot_password.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String action = request.getParameter("action");
        AccountDAO dao = new AccountDAO();

        // üü¢ B∆Ø·ªöC 1: G·ª¨I M√É KH√îI PH·ª§C
        if ("send".equals(action)) {
            String email = request.getParameter("email");
            Account acc = dao.getAccountByEmail(email);

            if (acc == null) {
                request.setAttribute("error", "Email n√†y ch∆∞a ƒë∆∞·ª£c ƒëƒÉng k√Ω!");
                request.getRequestDispatcher("/customer/forgot_password.jsp").forward(request, response);
                return;
            }

            // Sinh m√£ OTP
            String code = String.format("%06d", (int) (Math.random() * 1000000));
            dao.updateVerificationCode(email, code);

            try {
                String subject = "M√£ kh√¥i ph·ª•c m·∫≠t kh·∫©u c·ªßa b·∫°n";
                String message = "<p>Xin ch√†o " + acc.getF_name() + ",</p>"
                        + "<p>B·∫°n v·ª´a y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n t·∫°i Pustok Bookstore.</p>"
                        + "<h3>M√£ kh√¥i ph·ª•c c·ªßa b·∫°n l√†: <strong>" + code + "</strong></h3>"
                        + "<p>M√£ c√≥ hi·ªáu l·ª±c trong 10 ph√∫t.</p>";

                EmailUtility.sendEmail(email, subject, message);

                request.setAttribute("email", email);
                request.getRequestDispatcher("/customer/verify_reset.jsp").forward(request, response);

            } catch (Exception e) {
                e.printStackTrace();
                request.setAttribute("error", "Kh√¥ng th·ªÉ g·ª≠i email. Vui l√≤ng th·ª≠ l·∫°i sau!");
                request.getRequestDispatcher("/customer/forgot_password.jsp").forward(request, response);
            }

        // üü° B∆Ø·ªöC 2: X√ÅC NH·∫¨N M√É OTP
        } else if ("verify".equals(action)) {
            String email = request.getParameter("email");
            String code = request.getParameter("code");

            if (dao.verifyAccount(email, code)) {
                // N·∫øu m√£ ƒë√∫ng ‚Üí cho ph√©p ƒë·ªïi m·∫≠t kh·∫©u
                request.setAttribute("email", email);
                request.getRequestDispatcher("/customer/reset_password.jsp").forward(request, response);
            } else {
                request.setAttribute("email", email);
                request.setAttribute("error", "M√£ x√°c nh·∫≠n kh√¥ng ƒë√∫ng ho·∫∑c ƒë√£ h·∫øt h·∫°n!");
                request.getRequestDispatcher("/customer/verify_reset.jsp").forward(request, response);
            }

        // üîµ B∆Ø·ªöC 3: ƒê·ªîI M·∫¨T KH·∫®U M·ªöI
        } else if ("reset".equals(action)) {
            String email = request.getParameter("email");
            String pass = request.getParameter("password");
            String repass = request.getParameter("repeat_password");

            if (pass == null || repass == null || !pass.equals(repass)) {
                request.setAttribute("email", email);
                request.setAttribute("error", "M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng kh·ªõp!");
                request.getRequestDispatcher("/customer/reset_password.jsp").forward(request, response);
                return;
            }

            boolean updated = dao.changePasswordByEmail(email, pass);
            if (updated) {
                request.setAttribute("success", "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng! H√£y ƒëƒÉng nh·∫≠p l·∫°i.");
                request.getRequestDispatcher("/customer/login_register.jsp").forward(request, response);
            } else {
                request.setAttribute("error", "L·ªói khi ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u. Vui l√≤ng th·ª≠ l·∫°i!");
                request.getRequestDispatcher("/customer/reset_password.jsp").forward(request, response);
            }
        }
    }

    @Override
    public String getServletInfo() {
        return "Servlet x·ª≠ l√Ω qu√™n m·∫≠t kh·∫©u (g·ª≠i m√£ OTP, x√°c minh m√£, ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u)";
    }
}
